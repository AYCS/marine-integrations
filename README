===========================================================
Ocean Observatories Initiative Cyberinfrastructure (OOI CI)
Integrated Observatory Network (ION)

coi-servives - ION COI services

(C) UC Regents, 2010-2012
===========================================================

This is the repository that containes implemention for all marine integrations
including drivers and transforms.

Marine integration packages are inteded to be developed and released 
independantly of other ION releases.  

To develop drivers you must install ION and the Instrument Development Kit.  

INSTALL
=======

# Download the lastest source from github.  Note: in order to run 
# start_driver or package driver it is mandatory that you are running
# on a fork of the ooici/marine-integrations repository.

# Read only checkout
$ git clone git://github.com/ooici/marine-integrations

# Read / write checkout
$ git clone git@github.com:<your_github_uname>/marine-integrations

# Update all submodules (ion-definitions, coi-services, pyon)
$ cd marine-integrations
$ git submodule update --init

# Buildout the environment
$ python bootstrap.py
$ bin/buildout

USAGE
=====

####
#    Configuration
####

The first time you run an IDK script it will create an IDK configuration
directory (~/.idk).  In this directory you will find IDK log files and 
and IDK configuration file.  The important configuration that you are 
looking for in this file is 'working_repo'.  That is the directory where
you checkouted the marine-integrations repository.

If you move the local repository directory that file needs to be updated.
You can do this from the command line by running idk_rebase from the root 
of the local marine-integrations repository.

####
#    New Driver Workflow
####

bin/start_driver:
   Run this process to start developing a new driver.  

bin/switch_driver:
   Switch to

bin/test_driver:
   Run this process to run driver tests.  If no options are given all tests 
   (unit, integration, and qualification) are run.  This program offers 
   different usage options.  Use -h for detailed usage.

bin/package_driver:
   Run this process to submit the driver for ingestion into the OOI network.  
   The submitted driver could be rejected if tests are not complete, there is
   a naming conflict, or any other issues.  Feedback will be sent to the 
   developer to the address on your gethub account.

bin/idk_rebase:
   If you move the IDK directory this command will update your local IDK 
   configuration with the new directory.


