[buildout]
develop =
    .
    extern/pyon
    extern/coi-services

parts =
    pyzmq
    pyyaml
    gevent
    numpy-install
    h5py
    python
eggs =
    marine-integrations

unzip = true

# extends = versions.cfg
versions = versions

# Using our server instead of Pypi for indexing when Pypi goes wrong
# index = http://ooici.net/releases

# When set to false, buildout and its recipe versions must be
# explicitly pinned down and defined.
allow-picked-versions = true

# Useful line to print out the buildout versions you are using
extensions = buildout-versions

# Tells buildout where to download packages in addition to Pypi.
find-links =
    http://ooici.net/releases

# Use this section only if you want to override the
# versions in the parent file.
[versions]
setuptools=0.6c11
pyzmq=2.1.7
pyyaml=3.10
gevent=0.13.6
h5py=2.0.1

# Added specific include dir to work with brew install on Mac
[pyzmq]
recipe = zc.recipe.egg:custom
include-dirs = /usr/local/include

# Added specific include dir to work with brew install on Mac
[pyyaml]
recipe = zc.recipe.egg:custom
include-dirs = /usr/local/include

# Added specific include dir to work with brew install on Mac
[gevent]
recipe = zc.recipe.egg:custom
include-dirs = /usr/local/include

[numpy-src]
recipe = hexagonit.recipe.download
url = http://pypi.python.org/packages/source/n/numpy/numpy-1.6.1.tar.gz#md5=2bce18c08fc4fce461656f0f4dd9103e
ignore-existing = true

[numpy-install]
recipe = z3c.recipe.egg:setup
setup = ${numpy-src:location}/numpy-1.6.1
args =
    clean
    build
    install

# Added specific include dir to work with brew install on Mac
[gevent]
recipe = zc.recipe.egg:custom
include-dirs = /usr/local/include

[h5py]
recipe = zc.recipe.egg:custom
include-dirs = /usr/local/include

[python]
recipe = zc.recipe.egg
extra-paths = ${buildout:directory}/extern/coi-services
interpreter = python
initialization = from mi.core.log import LoggerManager
                 LoggerManager().init()

scripts =
    nosetests
    pycc
    pyccd
    generate_interfaces
    da_server
    idk_rebase
    package_driver
    start_driver
    switch_driver
    test_driver
    which_driver
entry-points =
    nosetests=nose:run_exit
    pycc=scripts.pycc:entry
    pyccd=scripts.pyccd:start_debugging
    generate_interfaces=scripts.generate_interfaces:main
    da_server=mi.idk.scripts.da_server:run
    idk_rebase=mi.idk.scripts.idk_rebase:run
    package_driver=mi.idk.scripts.package_driver:run
    start_driver=mi.idk.scripts.start_driver:run
    switch_driver=mi.idk.scripts.switch_driver:run
    test_driver=mi.idk.scripts.test_driver:run
    which_driver=mi.idk.scripts.which_driver:run
eggs =
    coi-services
    ${buildout:eggs}
